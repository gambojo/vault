---
- name: vault-init | Init vault server
  ansible.builtin.command: vault operator init -format=json
  args:
    creates: "{{ vault_dir_conf }}/init.file"
  environment:
    VAULT_ADDR: "{% if vault_port_https is defined %}https://{{ vault_address }}:{{ vault_port_https }}{%
                else %}http://{{ vault_address }}:{{ vault_port_http }}{% endif %}"
  register: vault_init
  when: inventory_hostname == vault_master
  no_log: true

- name: vault-init | Save init content to var
  ansible.builtin.set_fact:
    vault_init_content: "{{ hostvars[vault_master]['vault_init']['stdout'] }}"
  when: hostvars[vault_master]['vault_init']['changed']
  no_log: true

- name: vault-init | Slurp init content
  ansible.builtin.slurp:
    path: "{{ vault_dir_conf }}/init.file"
  register: vault_init_file_content
  when:
    - not hostvars[vault_master]['vault_init']['changed']

- name: vault-init | Save init content to var
  ansible.builtin.set_fact:
    vault_init_content: "{{ vault_init_file_content.content | b64decode }}"
  when:
    - not hostvars[vault_master]['vault_init']['changed']
  no_log: true

- name: vault-init | Save init content to file
  ansible.builtin.copy:
    content: "{{ vault_init_content }}"
    dest: "{{ vault_dir_conf }}/init.file"
    mode: '0600'
  when: hostvars[vault_master]['vault_init']['changed']
  no_log: true

- name: vault-init | Vault unseal
  ansible.builtin.command: vault operator unseal {{ item }}
  environment:
    VAULT_ADDR: "{% if vault_port_https is defined %}https://{{ vault_address }}:{{ vault_port_https }}{%
                else %}http://{{ vault_address }}:{{ vault_port_http }}{% endif %}"
    VAULT_TOKEN: "{{- vault_init_content.root_token -}}"
  loop:
    - "{{ vault_init_content.unseal_keys_b64[0] }}"
    - "{{ vault_init_content.unseal_keys_b64[1] }}"
    - "{{ vault_init_content.unseal_keys_b64[2] }}"
  when: hostvars[vault_master]['vault_init']['changed'] or
        vault_restart is changed
  no_log: true
